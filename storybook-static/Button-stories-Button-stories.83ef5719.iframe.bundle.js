"use strict";(self.webpackChunkreact_barebones_ts=self.webpackChunkreact_barebones_ts||[]).push([[136],{"./src/Button/stories/Button.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Danger:()=>Danger,Dropdown:()=>Dropdown,IconOnly:()=>IconOnly,Inverse:()=>Inverse,Primary:()=>Primary,Secondary:()=>Secondary,WithIcon:()=>WithIcon,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _Block__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/Block/index.tsx"),_index__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./src/Button/index.tsx"),react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/react/jsx-runtime.js");const __WEBPACK_DEFAULT_EXPORT__={title:"COMPONENTS/Button",component:_index__WEBPACK_IMPORTED_MODULE_1__.Z,argTypes:{variant:{type:{required:!0},control:"select",options:["primary","secondary","inverse","success","error"]},action:{type:{required:!0},control:"Event"},disabled:{control:"boolean"},dropdown:{control:"boolean"},icon:{control:"text"},iconColor:{control:"text"}}},Template=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index__WEBPACK_IMPORTED_MODULE_1__.Z,{variant:args.variant,action:args.action,style:args.style,disabled:args.disabled,icon:args.icon,dropdown:args.dropdown,children:args.children});Template.displayName="Template";const DarkTemplate=args=>(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_Block__WEBPACK_IMPORTED_MODULE_0__.Z,{classes:"bb-background-15 bb-p-400 bb-border-radius-400",children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_2__.jsx)(_index__WEBPACK_IMPORTED_MODULE_1__.Z,{variant:args.variant,action:args.action,style:args.style,disabled:args.disabled,icon:args.icon,dropdown:args.dropdown,children:args.children})});DarkTemplate.displayName="DarkTemplate";const Primary=Template.bind({});Primary.args={variant:"primary",children:"Primary",action:()=>{console.log("Button Primary was clicked")}};const Secondary=Template.bind({});Secondary.args={variant:"secondary",children:"Secondary",action:()=>{console.log("Button Secondary was clicked")}};const Inverse=DarkTemplate.bind({});Inverse.args={variant:"inverse",children:"Inverse",action:()=>{console.log("Button Secondary was clicked")}};const Danger=Template.bind({});Danger.args={variant:"danger",children:"Danger",action:()=>{console.log("Button Danger was clicked")},icon:void 0};const WithIcon=Template.bind({});WithIcon.args={variant:"primary",children:"With Icon",action:()=>{console.log("Button With Icon was clicked")},icon:"admin-fill"};const IconOnly=Template.bind({});IconOnly.args={variant:"icon-only",action:()=>{console.log("Button Icon was clicked")},icon:"admin-fill"};const Dropdown=Template.bind({});Dropdown.args={variant:"secondary",children:"Dropdown",action:()=>{console.log("Button Dropdown was clicked")},dropdown:!0},Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:"args => <Button variant={args.variant} action={args.action} style={args.style} disabled={args.disabled} icon={args.icon} dropdown={args.dropdown}>\r\n    {args.children}\r\n</Button>",...Primary.parameters?.docs?.source}}},Secondary.parameters={...Secondary.parameters,docs:{...Secondary.parameters?.docs,source:{originalSource:"args => <Button variant={args.variant} action={args.action} style={args.style} disabled={args.disabled} icon={args.icon} dropdown={args.dropdown}>\r\n    {args.children}\r\n</Button>",...Secondary.parameters?.docs?.source}}},Inverse.parameters={...Inverse.parameters,docs:{...Inverse.parameters?.docs,source:{originalSource:"args => <Block classes={'bb-background-15 bb-p-400 bb-border-radius-400'}>\r\n        <Button variant={args.variant} action={args.action} style={args.style} disabled={args.disabled} icon={args.icon} dropdown={args.dropdown}>\r\n            {args.children}\r\n        </Button>\r\n    </Block>",...Inverse.parameters?.docs?.source}}},Danger.parameters={...Danger.parameters,docs:{...Danger.parameters?.docs,source:{originalSource:"args => <Button variant={args.variant} action={args.action} style={args.style} disabled={args.disabled} icon={args.icon} dropdown={args.dropdown}>\r\n    {args.children}\r\n</Button>",...Danger.parameters?.docs?.source}}},WithIcon.parameters={...WithIcon.parameters,docs:{...WithIcon.parameters?.docs,source:{originalSource:"args => <Button variant={args.variant} action={args.action} style={args.style} disabled={args.disabled} icon={args.icon} dropdown={args.dropdown}>\r\n    {args.children}\r\n</Button>",...WithIcon.parameters?.docs?.source}}},IconOnly.parameters={...IconOnly.parameters,docs:{...IconOnly.parameters?.docs,source:{originalSource:"args => <Button variant={args.variant} action={args.action} style={args.style} disabled={args.disabled} icon={args.icon} dropdown={args.dropdown}>\r\n    {args.children}\r\n</Button>",...IconOnly.parameters?.docs?.source}}},Dropdown.parameters={...Dropdown.parameters,docs:{...Dropdown.parameters?.docs,source:{originalSource:"args => <Button variant={args.variant} action={args.action} style={args.style} disabled={args.disabled} icon={args.icon} dropdown={args.dropdown}>\r\n    {args.children}\r\n</Button>",...Dropdown.parameters?.docs?.source}}};const __namedExportsOrder=["Primary","Secondary","Inverse","Danger","WithIcon","IconOnly","Dropdown"]}}]);